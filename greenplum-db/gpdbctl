#!/usr/bin/env bash

gpdata=%%GPDATA%%
source %%GPHOME%%/greenplum_path.sh

copy="/bin/cp"
mkdir="/bin/mkdir -p"
chmod="/bin/chmod"
sed="/usr/bin/sed"

usage() {
    echo
    echo "USAGE"
    echo
    echo -e "\t$(basename $0) <command>"
    echo
    echo "WHERE"
    echo
    echo -e "\tcommand one of:"
    echo
    echo -e "\tkernel\tconfigure OS X kernel parameters"
    echo -e "\tinit\tinitialize data directory"
    echo -e "\tstart\tstart GreenplumDB daemon"
    echo -e "\tstop\tstop GreenplumDB daemon"
    echo
    echo "DESCRIPTION"
    echo
    echo -e "\tRun with \"kernel\" to configure OS X kernel with recommended arameters."    
    echo -e "\tSkipping this step may result in errors when running GreenplumDB."
    echo
    echo -e "\tRun with \"init\" to intialize GreenplumDB data directory and database."
    echo -e "\tMust be performed once before database can be started."
    echo
    echo -e "\tRun with \"start\" to start the GreenplumDB daemon."
    echo
    echo -e "\tRun with \"stop\" to stop the GreenplumDB daemon."
    echo
    echo "OPTIONS"
    echo
    echo -e "\t-h\tdisplay this message"
    echo
    echo
}

while getopts ":h" opt ; do
    case $opt in
        h)
            usage
            exit
            ;;
        :)
            echo "$opt requires an argument" >&2
            echo "run with -h for help" >&2
            exit 1
            ;;
        \?)
            echo "invalid option $opt" >&2
            echo "run with -h for help" >&2
            exit 1
            ;;
    esac
done
shift $(($OPTIND-1))

if [[ $# == 0 ]] ; then
    echo "command missing, run with -h for help" >&2
    exit 1
fi
if [[ $# > 1 ]] ; then
    echo "specify at most one command, run with -h for help" >&2
    exit 1
fi
command=$1



kernel() {
    local kernel_config=/etc/sysctl.conf
    echo
    echo "This will alter your current kernel parameters using sysctl and persist"
    echo "them across reboots by storing them in $kernel_config."
    echo
    echo "sudo ability is required."
    echo
    echo -n "Continue? (CTRL-C to exit) "
    read
    local params
    read -r -d '' params <<EOF
kern.maxfiles=65535
kern.maxfilesperproc=65535
kern.sysv.shmmin=1
kern.sysv.shmmax=2147483648
kern.sysv.shmmni=64
kern.sysv.shmseg=16
kern.sysv.shmall=524288
net.inet.tcp.msl=60
EOF
    sudo touch $kernel_config || exit 1 # init file and verify sudo access
    for param in $params ; do
        key=$(echo $param | cut -d'=' -f1)
        value=$(echo $param | cut -d'=' -f2)
        # set for current boot
        sudo sysctl -w $key=$value
        # remove existing param if any
        grep -v "^$key=" $kernel_config > $TMPDIR/gpdbctl.$$
        sudo /bin/mv $TMPDIR/gpdbctl.$$ $kernel_config
        # persist param across reboots
        sudo sh -c "echo $key=$value >> $kernel_config"
    done
}

init() {
    if [[ -d $gpdata ]] ; then
        echo >&2
        echo "Error: GreenplumDB data directory already exists" >&2
        echo >&2
        echo "To reinitialize, remove the directory:" >&2
        echo -e "\t$gpdata" >&2
        echo "then rerun:" >&2
        echo -e "\t$(basename $0) init" >&2
        echo >&2
        exit 1
    fi

    echo "GreenplumDB initialization assumes you have set up your ssh keys"
    echo "so that you can log into this host without having to provide a"
    echo "password.  If you have not set up your ssh keys, exit now."
    echo -n "Continue? (CTRL-C to exit) "
    read

    # init db dirs
    $mkdir $gpdata/db/gpmaster
    $mkdir $gpdata/db/gpdata1

    # init config files
    $mkdir $gpdata/conf
    echo $(hostname) > $gpdata/conf/hostlist_singlenode
    $copy $GPHOME/docs/cli_help/gpconfigs/gpinitsystem_singlenode $gpdata/conf
    $chmod +w $gpdata/conf/*
    $sed -i '' 's:DATA_DIRECTORY=(.*).*:DATA_DIRECTORY=('$gpdata/db/gpdata1'):' \
        $gpdata/conf/gpinitsystem_singlenode
    $sed -i '' 's:^MASTER_HOSTNAME=.*:MASTER_HOSTNAME='$(hostname)':' \
        $gpdata/conf/gpinitsystem_singlenode
    $sed -i '' 's:^MASTER_DIRECTORY=.*:MASTER_DIRECTORY='$gpdata/db/gpmaster':' \
        $gpdata/conf/gpinitsystem_singlenode
    $chmod a+r-wx,u+w $gpdata/conf/*

    # init database
    $GPHOME/bin/gpinitsystem -a \
        -c $gpdata/conf/gpinitsystem_singlenode \
        -h $gpdata/conf/hostlist_singlenode

    stop  # above starts the database so we stop it before returning control

    echo
    echo "GreenplumDB data directory and database initialized"
    echo
    echo "Note above instructions for setting up your bash profile so that"
    echo "you can run GreenplumDB command line tools."
    echo
    echo "If using this script to start and stop your database, you can ignore"
    echo "those instructions."
    echo
    echo "To start the GreenplumDB daemon, run"
    echo "    gpdbctl start"
    echo
}

start() {
    if [[ ! -d $gpdata ]] ; then
        echo >&2
        echo "Error: GreenplumDB data directory not initialized" >&2
        echo >&2
        echo "To initialize, run the command:" >&2
        echo -e "\t$(basename $0) init" >&2
        echo >&2
        exit 1
    fi
    yes | MASTER_DATA_DIRECTORY=$gpdata/db/gpmaster/gpsne-1 gpstart
    echo
    echo "To stop the GreenplumDB daemon, run:"
    echo -e "\tgpdbctl stop"
    echo
}

stop() {
    yes | MASTER_DATA_DIRECTORY=$gpdata/db/gpmaster/gpsne-1 gpstop
}

case $command in
  kernel)
    kernel
    exit
    ;;
  init)
    init
    exit
    ;;
  start)
    start
    exit
    ;;
  stop)
    stop
    exit
    ;;
  *)
    echo "unknown command: $command" >&2
    echo "run with -h for help" >&2
    exit 1
    ;;
esac

# vim: sw=4 sts=4
